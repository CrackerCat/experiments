diff --git a/peloader/winapi/Crypt.c b/peloader/winapi/Crypt.c
index 7ed60ef..73be78f 100644
--- a/peloader/winapi/Crypt.c
+++ b/peloader/winapi/Crypt.c
@@ -159,6 +159,40 @@ enum {
 
 
 #include "rootcert.h"
+#include <stdio.h>
+
+void hexdump(const void *data, size_t size) {
+    const unsigned char *p = (const unsigned char *)data;
+    size_t i, j;
+
+    for (i = 0; i < size; i += 16) {
+        printf("%06zx:", i);
+
+        for (j = 0; j < 16; j++) {
+            if (i + j < size) {
+                printf(" %02x", p[i + j]);
+            } else {
+                printf("   ");
+            }
+        }
+
+        printf(" ");
+
+        for (j = 0; j < 16; j++) {
+            if (i + j < size) {
+                unsigned char c = p[i + j];
+                printf("%c", (c >= 32 && c < 127) ? c : '.');
+            } else {
+                printf(" ");
+            }
+        }
+
+        printf("\n");
+    }
+}
+
+extern DWORD WINAPI SetLastError(DWORD dwErrCode);
+
 
 static PVOID WINAPI CertFindCertificateInStore(HANDLE hCertStore,
                                                DWORD dwCertEncodingType,
@@ -170,6 +204,8 @@ static PVOID WINAPI CertFindCertificateInStore(HANDLE hCertStore,
     static CERT_INFO FakeInfo = {0};
     static CERT_CONTEXT FakeCert = {0};
 
+    //__debugbreak();
+
     DebugLog("%p, %u, %#x, %#x, %p, %p", hCertStore,
                                          dwCertEncodingType,
                                          dwFindFlags,
@@ -180,6 +216,27 @@ static PVOID WINAPI CertFindCertificateInStore(HANDLE hCertStore,
     switch  (dwFindType) {
         case CERT_FIND_SUBJECT_NAME: {
             DebugLog("\tCERT_FIND_SUBJECT_NAME");
+            //hexdump(((CERT_NAME_BLOB *)pvFindPara)->pbData, ((CERT_NAME_BLOB *)pvFindPara)->cbData);
+            // If "Signing PCA 2010" in data
+            if (strcmp(((CERT_NAME_BLOB *)pvFindPara)->pbData + (((CERT_NAME_BLOB *)pvFindPara)->cbData - 16), "Signing PCA 2010") == 0) {
+                DebugLog("\t\tSigning CA");
+                //(CRYPT_E_NOT_FOUND)
+                SetLastError(0x80092004);
+                return 0;
+                break;
+            }
+            // If "Time-Stamp PCA 2010"
+            if (memcmp(((CERT_NAME_BLOB *)pvFindPara)->pbData + (((CERT_NAME_BLOB *)pvFindPara)->cbData - 19), "Time-Stamp PCA 2010", 19) == 0) {
+                fprintf(stderr, "\t\tTime-Stamp CA\n");
+                FakeCert.pbCertEncoded = TimestampCertificate;
+                FakeCert.cbCertEncoded = sizeof(TimestampCertificate);
+                FakeCert.dwCertEncodingType = 1;
+                FakeCert.pCertInfo = &FakeInfo;
+                FakeCert.pCertInfo->SubjectPublicKeyInfo.Algorithm.pszObjId = "1.2.840.113549.1.1.1";
+                return &FakeCert;
+
+                break;
+            }
             break;
         }
     }
@@ -189,6 +246,9 @@ static PVOID WINAPI CertFindCertificateInStore(HANDLE hCertStore,
     FakeCert.dwCertEncodingType = 1;
     FakeCert.pbCertEncoded = RootCertificate;
     FakeCert.cbCertEncoded = sizeof(RootCertificate);
+    FakeCert.pbCertEncoded = TimestampCertificate;
+    FakeCert.cbCertEncoded = sizeof(TimestampCertificate);
+    
     FakeCert.pCertInfo = &FakeInfo;
     FakeCert.pCertInfo->SubjectPublicKeyInfo.Algorithm.pszObjId = "1.2.840.113549.1.1.1";
 
diff --git a/peloader/winapi/Files.c b/peloader/winapi/Files.c
index f469367..6f0321c 100644
--- a/peloader/winapi/Files.c
+++ b/peloader/winapi/Files.c
@@ -201,6 +206,9 @@ static BOOL WINAPI SetFilePointerEx(HANDLE hFile, uint64_t liDistanceToMove,  ui
 static BOOL WINAPI CloseHandle(HANDLE hObject)
 {
     DebugLog("%p", hObject);
+    if (hObject == 0x1234) {
+        return TRUE;
+    }
     if (hObject != (HANDLE) 'EVNT'
      && hObject != INVALID_HANDLE_VALUE
      && hObject != (HANDLE) 'SEMA')
@@ -336,7 +344,11 @@ static BOOL WINAPI VerQueryValueW(PVOID pBlock, PWCHAR lpSubBlock, PVOID  *lplpB
 
 static DWORD WINAPI QueryDosDevice(PVOID lpDeviceName, PVOID lpTargetPath, DWORD ucchMax)
 {
-    DebugLog("");
+    DebugLog("%s, %p, %u", lpDeviceName, lpTargetPath, ucchMax);
+    if (strcmp(lpDeviceName, "C") == 0) {
+        strcpy(lpTargetPath, "/");
+        return 2;
+    }
     return 0;
 }
 
diff --git a/peloader/winapi/GetSystemDirectory.c b/peloader/winapi/GetSystemDirectory.c
index 7dac8d7..e6bb3a0 100644
--- a/peloader/winapi/GetSystemDirectory.c
+++ b/peloader/winapi/GetSystemDirectory.c
@@ -46,7 +46,17 @@ STATIC UINT WINAPI GetSystemWow64DirectoryW(PWCHAR lpBuffer, UINT uSize)
     return 0;
 }
 
+STATIC UINT WINAPI GetCurrentDirectoryW(UINT nBufferLength, PWCHAR lpBuffer)
+{
+    DebugLog("%u, %p", nBufferLength, lpBuffer);
+    // Implement the logic to get the current directory here
+    // For example:
+    strcpy(lpBuffer, "C:\\current_directory\\");
+    return strlen(lpBuffer);
+}
+
 
 DECLARE_CRT_EXPORT("GetSystemDirectoryW", GetSystemDirectoryW);
 DECLARE_CRT_EXPORT("GetSystemWindowsDirectoryW", GetSystemWindowsDirectoryW);
 DECLARE_CRT_EXPORT("GetSystemWow64DirectoryW", GetSystemWow64DirectoryW);
+DECLARE_CRT_EXPORT("GetCurrentDirectoryW", GetCurrentDirectoryW);
\ No newline at end of file
diff --git a/peloader/winapi/Locale.c b/peloader/winapi/Locale.c
index f8344cb..2ea9703 100644
--- a/peloader/winapi/Locale.c
+++ b/peloader/winapi/Locale.c
@@ -83,6 +83,18 @@ STATIC WINAPI int GetLocaleInfoEx(LPCWSTR lpLocaleName, DWORD LCType, LPWSTR lpL
     return 0;
 }
 
+STATIC WINAPI DWORD GetUserDefaultLCID(void)
+{
+    DebugLog("");
+    return 0x400; // LOCALE_USER_DEFAULT
+}
+
+STATIC WINAPI int LCMapStringA(DWORD Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest)
+{
+    return LCMapStringEx(LOCALE_NAME_USER_DEFAULT, dwMapFlags, lpSrcStr, cchSrc, lpDestStr, cchDest, NULL, NULL, NULL);
+}
+
+
 DECLARE_CRT_EXPORT("GetACP", GetACP);
 DECLARE_CRT_EXPORT("IsValidCodePage", IsValidCodePage);
 DECLARE_CRT_EXPORT("GetCPInfo", GetCPInfo);
@@ -90,3 +102,5 @@ DECLARE_CRT_EXPORT("LocaleNameToLCID", LocaleNameToLCID);
 DECLARE_CRT_EXPORT("LCMapStringW", LCMapStringW);
 DECLARE_CRT_EXPORT("LCMapStringEx", LCMapStringEx);
 DECLARE_CRT_EXPORT("GetLocaleInfoEx", GetLocaleInfoEx);
+DECLARE_CRT_EXPORT("GetUserDefaultLCID", GetUserDefaultLCID);
+DECLARE_CRT_EXPORT("LCMapStringA", LCMapStringA);
diff --git a/peloader/winapi/Process.c b/peloader/winapi/Process.c
index b28ed0a..7e550a6 100644
--- a/peloader/winapi/Process.c
+++ b/peloader/winapi/Process.c
@@ -4,6 +4,9 @@
 #include <stdbool.h>
 #include <search.h>
 #include <string.h>
+#include <stdio.h>
+
+
 
 #include "winnt_types.h"
 #include "pe_linker.h"
@@ -21,4 +24,50 @@ STATIC NTSTATUS WINAPI NtSetInformationProcess(HANDLE ProcessHandle,
     return 0;
 }
 
+HANDLE WINAPI OpenProcessToken(HANDLE ProcessHandle,
+                               DWORD DesiredAccess,
+                               PHANDLE TokenHandle)
+{
+    // Implementation code goes here
+    *TokenHandle = (HANDLE) 0x1234;
+    return TRUE; // Replace with appropriate return value
+}
+
+BOOL WINAPI AdjustTokenPrivileges(HANDLE TokenHandle,
+                                  BOOL DisableAllPrivileges,
+                                  void* NewState,
+                                  DWORD BufferLength,
+                                  void* PreviousState,
+                                  PDWORD ReturnLength)
+{
+    fprintf(stderr, "AdjustTokenPrivileges(TokenHandle=%p, DisableAllPrivileges=%d, NewState=%p, BufferLength=%d, PreviousState=%p, ReturnLength=%p)\n", TokenHandle, DisableAllPrivileges, NewState, BufferLength, PreviousState, ReturnLength);
+    
+    return 1; // Replace with appropriate return value
+}
+
+
+DWORD WINAPI QueryFullProcessImageNameW(HANDLE hProcess,
+                                        DWORD dwFlags,
+                                        LPWSTR lpExeName,
+                                        PDWORD lpdwSize)
+{
+    DebugLog("%p, %u, %p, %p", hProcess, dwFlags, lpExeName, lpdwSize);
+
+    if (hProcess == NULL || lpExeName == NULL || lpdwSize == NULL) {
+        //SetLastError(ERROR_INVALID_PARAMETER);
+        return 0;
+    }
+
+
+    strcpy(lpExeName, "C:\\path\\to\\process.exe");
+    // Update the size parameter
+    *lpdwSize = strlen(lpExeName);
+
+
+    return 1;
+}
+
 DECLARE_CRT_EXPORT("NtSetInformationProcess", NtSetInformationProcess);
+DECLARE_CRT_EXPORT("OpenProcessToken", OpenProcessToken);
+DECLARE_CRT_EXPORT("AdjustTokenPrivileges", AdjustTokenPrivileges);
+DECLARE_CRT_EXPORT("QueryFullProcessImageNameW", QueryFullProcessImageNameW);
\ No newline at end of file
diff --git a/peloader/winapi/Security.c b/peloader/winapi/Security.c
index 62386b9..222056a 100644
--- a/peloader/winapi/Security.c
+++ b/peloader/winapi/Security.c
@@ -12,6 +12,9 @@
 #include "winexports.h"
 #include "util.h"
 
+extern PVOID WINAPI LocalAlloc(UINT uFlags, SIZE_T uBytes);
+
+
 BOOL WINAPI LookupPrivilegeValueW(PVOID lpSystemName, PVOID lpName, PVOID lpLuid)
 {
     DebugLog("%p, %p, %p", lpSystemName, lpName, lpLuid);
@@ -19,4 +22,21 @@ BOOL WINAPI LookupPrivilegeValueW(PVOID lpSystemName, PVOID lpName, PVOID lpLuid
     return FALSE;
 }
 
+BOOL WINAPI ConvertStringSecurityDescriptorToSecurityDescriptorW(
+    LPCWSTR StringSecurityDescriptor,
+    DWORD StringSDRevision,
+    void** SecurityDescriptor,
+    PULONG SecurityDescriptorSize
+)
+{
+    DebugLog("%p, %u, %p, %p", StringSecurityDescriptor, StringSDRevision, SecurityDescriptor, SecurityDescriptorSize);
+    //*SecurityDescriptor = LocalAlloc(4, 0x100);
+    *SecurityDescriptor = malloc(0x100);
+    if (SecurityDescriptorSize != NULL)
+        *SecurityDescriptorSize = 0x100;
+    return TRUE;
+}
+
+DECLARE_CRT_EXPORT("ConvertStringSecurityDescriptorToSecurityDescriptorW", ConvertStringSecurityDescriptorToSecurityDescriptorW);
+
 DECLARE_CRT_EXPORT("LookupPrivilegeValueW", LookupPrivilegeValueW);
diff --git a/peloader/winapi/Strings.c b/peloader/winapi/Strings.c
index a02be82..1e433ea 100644
--- a/peloader/winapi/Strings.c
+++ b/peloader/winapi/Strings.c
@@ -216,6 +216,19 @@ STATIC INT WINAPI CompareStringOrdinal(PVOID lpString1,
     return CSTR_GREATER_THAN;
 }
 
+STATIC WINAPI BOOL GetStringTypeExA(int Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, char* lpCharType)
+{
+    return GetStringTypeA(Locale, dwInfoType, lpSrcStr, cchSrc, lpCharType);
+}
+
+
+
+STATIC WINAPI BOOL GetStringTypeExW(int Locale, DWORD dwInfoType, LPCWSTR lpSrcStr, int cchSrc, WCHAR* lpCharType)
+{
+    return GetStringTypeW(dwInfoType, lpSrcStr, cchSrc, lpCharType);
+}
+
+
 DECLARE_CRT_EXPORT("MultiByteToWideChar", MultiByteToWideChar);
 DECLARE_CRT_EXPORT("WideCharToMultiByte", WideCharToMultiByte);
 DECLARE_CRT_EXPORT("GetStringTypeA", GetStringTypeA);
@@ -224,4 +237,5 @@ DECLARE_CRT_EXPORT("RtlInitUnicodeString", RtlInitUnicodeString);
 DECLARE_CRT_EXPORT("UuidFromStringW", UuidFromStringW);
 DECLARE_CRT_EXPORT("UuidCreate", UuidCreate);
 DECLARE_CRT_EXPORT("CompareStringOrdinal", CompareStringOrdinal);
-
+DECLARE_CRT_EXPORT("GetStringTypeExA", GetStringTypeExA);
+DECLARE_CRT_EXPORT("GetStringTypeExW", GetStringTypeExW);
diff --git a/peloader/winapi/rootcert.h b/peloader/winapi/rootcert.h
index 5988e5f..5828335 100644
--- a/peloader/winapi/rootcert.h
+++ b/peloader/winapi/rootcert.h
@@ -128,3 +128,7 @@ static uint8_t RootCertificate[] = {
   0x61, 0xb4, 0x40, 0xff, 0x59, 0x86, 0x71, 0xd1, 0xd5, 0x33, 0x69, 0x7c,
   0xa9, 0x73, 0x8a, 0x38, 0xd7, 0x64, 0x0c, 0xf1, 0x69
 };
+
+static uint8_t TimestampCertificate[] = {
+  0x30 ,0x82 ,0x6 ,0x71 ,0x30 ,0x82 ,0x4 ,0x59 ,0xa0 ,0x3 ,0x2 ,0x1 ,0x2 ,0x2 ,0xa ,0x61 ,0x9 ,0x81 ,0x2a ,0x0 ,0x0 ,0x0 ,0x0 ,0x0 ,0x2 ,0x30 ,0xd ,0x6 ,0x9 ,0x2a ,0x86 ,0x48 ,0x86 ,0xf7 ,0xd ,0x1 ,0x1 ,0xb ,0x5 ,0x0 ,0x30 ,0x81 ,0x88 ,0x31 ,0xb ,0x30 ,0x9 ,0x6 ,0x3 ,0x55 ,0x4 ,0x6 ,0x13 ,0x2 ,0x55 ,0x53 ,0x31 ,0x13 ,0x30 ,0x11 ,0x6 ,0x3 ,0x55 ,0x4 ,0x8 ,0x13 ,0xa ,0x57 ,0x61 ,0x73 ,0x68 ,0x69 ,0x6e ,0x67 ,0x74 ,0x6f ,0x6e ,0x31 ,0x10 ,0x30 ,0xe ,0x6 ,0x3 ,0x55 ,0x4 ,0x7 ,0x13 ,0x7 ,0x52 ,0x65 ,0x64 ,0x6d ,0x6f ,0x6e ,0x64 ,0x31 ,0x1e ,0x30 ,0x1c ,0x6 ,0x3 ,0x55 ,0x4 ,0xa ,0x13 ,0x15 ,0x4d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x20 ,0x43 ,0x6f ,0x72 ,0x70 ,0x6f ,0x72 ,0x61 ,0x74 ,0x69 ,0x6f ,0x6e ,0x31 ,0x32 ,0x30 ,0x30 ,0x6 ,0x3 ,0x55 ,0x4 ,0x3 ,0x13 ,0x29 ,0x4d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x20 ,0x52 ,0x6f ,0x6f ,0x74 ,0x20 ,0x43 ,0x65 ,0x72 ,0x74 ,0x69 ,0x66 ,0x69 ,0x63 ,0x61 ,0x74 ,0x65 ,0x20 ,0x41 ,0x75 ,0x74 ,0x68 ,0x6f ,0x72 ,0x69 ,0x74 ,0x79 ,0x20 ,0x32 ,0x30 ,0x31 ,0x30 ,0x30 ,0x1e ,0x17 ,0xd ,0x31 ,0x30 ,0x30 ,0x37 ,0x30 ,0x31 ,0x32 ,0x31 ,0x33 ,0x36 ,0x35 ,0x35 ,0x5a ,0x17 ,0xd ,0x32 ,0x35 ,0x30 ,0x37 ,0x30 ,0x31 ,0x32 ,0x31 ,0x34 ,0x36 ,0x35 ,0x35 ,0x5a ,0x30 ,0x7c ,0x31 ,0xb ,0x30 ,0x9 ,0x6 ,0x3 ,0x55 ,0x4 ,0x6 ,0x13 ,0x2 ,0x55 ,0x53 ,0x31 ,0x13 ,0x30 ,0x11 ,0x6 ,0x3 ,0x55 ,0x4 ,0x8 ,0x13 ,0xa ,0x57 ,0x61 ,0x73 ,0x68 ,0x69 ,0x6e ,0x67 ,0x74 ,0x6f ,0x6e ,0x31 ,0x10 ,0x30 ,0xe ,0x6 ,0x3 ,0x55 ,0x4 ,0x7 ,0x13 ,0x7 ,0x52 ,0x65 ,0x64 ,0x6d ,0x6f ,0x6e ,0x64 ,0x31 ,0x1e ,0x30 ,0x1c ,0x6 ,0x3 ,0x55 ,0x4 ,0xa ,0x13 ,0x15 ,0x4d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x20 ,0x43 ,0x6f ,0x72 ,0x70 ,0x6f ,0x72 ,0x61 ,0x74 ,0x69 ,0x6f ,0x6e ,0x31 ,0x26 ,0x30 ,0x24 ,0x6 ,0x3 ,0x55 ,0x4 ,0x3 ,0x13 ,0x1d ,0x4d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x20 ,0x54 ,0x69 ,0x6d ,0x65 ,0x2d ,0x53 ,0x74 ,0x61 ,0x6d ,0x70 ,0x20 ,0x50 ,0x43 ,0x41 ,0x20 ,0x32 ,0x30 ,0x31 ,0x30 ,0x30 ,0x82 ,0x1 ,0x22 ,0x30 ,0xd ,0x6 ,0x9 ,0x2a ,0x86 ,0x48 ,0x86 ,0xf7 ,0xd ,0x1 ,0x1 ,0x1 ,0x5 ,0x0 ,0x3 ,0x82 ,0x1 ,0xf ,0x0 ,0x30 ,0x82 ,0x1 ,0xa ,0x2 ,0x82 ,0x1 ,0x1 ,0x0 ,0xa9 ,0x1d ,0xd ,0xbc ,0x77 ,0x11 ,0x8a ,0x3a ,0x20 ,0xec ,0xfc ,0x13 ,0x97 ,0xf5 ,0xfa ,0x7f ,0x69 ,0x94 ,0x6b ,0x74 ,0x54 ,0x10 ,0xd5 ,0xa5 ,0xa ,0x0 ,0x82 ,0x85 ,0xfb ,0xed ,0x7c ,0x68 ,0x4b ,0x2c ,0x5f ,0xc5 ,0xc3 ,0xe5 ,0x61 ,0xc2 ,0x76 ,0xb7 ,0x3e ,0x66 ,0x2b ,0x5b ,0xf0 ,0x15 ,0x53 ,0x27 ,0x4 ,0x31 ,0x1f ,0x41 ,0x1b ,0x1a ,0x95 ,0x1d ,0xce ,0x9 ,0x13 ,0x8e ,0x7c ,0x61 ,0x30 ,0x59 ,0xb1 ,0x30 ,0x44 ,0xf ,0xf1 ,0x60 ,0x88 ,0x84 ,0x54 ,0x43 ,0xc ,0xd7 ,0x4d ,0xb8 ,0x38 ,0x8 ,0xb3 ,0x42 ,0xdd ,0x93 ,0xac ,0xd6 ,0x73 ,0x30 ,0x57 ,0x26 ,0x82 ,0xa3 ,0x45 ,0xd ,0xd0 ,0xea ,0xf5 ,0x47 ,0x81 ,0xcd ,0xbf ,0x24 ,0x60 ,0x32 ,0x58 ,0x60 ,0x46 ,0xf2 ,0x58 ,0x47 ,0x86 ,0x32 ,0x84 ,0x1e ,0x74 ,0x61 ,0x67 ,0x91 ,0x5f ,0x81 ,0x54 ,0xb1 ,0xcf ,0x93 ,0x4c ,0x92 ,0xc1 ,0xc4 ,0xa6 ,0x5d ,0xd1 ,0x61 ,0x13 ,0x6e ,0x28 ,0xc6 ,0x1a ,0xf9 ,0x86 ,0x80 ,0xbb ,0xdf ,0x61 ,0xfc ,0x46 ,0xc1 ,0x27 ,0x1d ,0x24 ,0x67 ,0x12 ,0x72 ,0x1a ,0x21 ,0x8a ,0xaf ,0x4b ,0x64 ,0x89 ,0x50 ,0x62 ,0xb1 ,0x5d ,0xfd ,0x77 ,0x1f ,0x3d ,0xf0 ,0x57 ,0x75 ,0xac ,0xbd ,0x8a ,0x42 ,0x4d ,0x40 ,0x51 ,0xd1 ,0xf ,0x9c ,0x6 ,0x3e ,0x67 ,0x7f ,0xf5 ,0x66 ,0xc0 ,0x3 ,0x96 ,0x44 ,0x7e ,0xef ,0xd0 ,0x4b ,0xfd ,0x6e ,0xe5 ,0x9a ,0xca ,0xb1 ,0xa8 ,0xf2 ,0x7a ,0x2a ,0xa ,0x31 ,0xf0 ,0xda ,0x4e ,0x6 ,0x91 ,0xb6 ,0x88 ,0x8 ,0x35 ,0xe8 ,0x78 ,0x1c ,0xb0 ,0xe9 ,0x99 ,0xcd ,0x3c ,0xe7 ,0x2f ,0x44 ,0xba ,0xa7 ,0xf4 ,0xdc ,0x64 ,0xbd ,0xa4 ,0x1 ,0xc1 ,0x20 ,0x9 ,0x93 ,0x78 ,0xcd ,0xfc ,0xbc ,0xc0 ,0xc9 ,0x44 ,0x5d ,0x5e ,0x16 ,0x9c ,0x1 ,0x5 ,0x4f ,0x22 ,0x4d ,0x2 ,0x3 ,0x1 ,0x0 ,0x1 ,0xa3 ,0x82 ,0x1 ,0xe6 ,0x30 ,0x82 ,0x1 ,0xe2 ,0x30 ,0x10 ,0x6 ,0x9 ,0x2b ,0x6 ,0x1 ,0x4 ,0x1 ,0x82 ,0x37 ,0x15 ,0x1 ,0x4 ,0x3 ,0x2 ,0x1 ,0x0 ,0x30 ,0x1d ,0x6 ,0x3 ,0x55 ,0x1d ,0xe ,0x4 ,0x16 ,0x4 ,0x14 ,0xd5 ,0x63 ,0x3a ,0x5c ,0x8a ,0x31 ,0x90 ,0xf3 ,0x43 ,0x7b ,0x7c ,0x46 ,0x1b ,0xc5 ,0x33 ,0x68 ,0x5a ,0x85 ,0x6d ,0x55 ,0x30 ,0x19 ,0x6 ,0x9 ,0x2b ,0x6 ,0x1 ,0x4 ,0x1 ,0x82 ,0x37 ,0x14 ,0x2 ,0x4 ,0xc ,0x1e ,0xa ,0x0 ,0x53 ,0x0 ,0x75 ,0x0 ,0x62 ,0x0 ,0x43 ,0x0 ,0x41 ,0x30 ,0xb ,0x6 ,0x3 ,0x55 ,0x1d ,0xf ,0x4 ,0x4 ,0x3 ,0x2 ,0x1 ,0x86 ,0x30 ,0xf ,0x6 ,0x3 ,0x55 ,0x1d ,0x13 ,0x1 ,0x1 ,0xff ,0x4 ,0x5 ,0x30 ,0x3 ,0x1 ,0x1 ,0xff ,0x30 ,0x1f ,0x6 ,0x3 ,0x55 ,0x1d ,0x23 ,0x4 ,0x18 ,0x30 ,0x16 ,0x80 ,0x14 ,0xd5 ,0xf6 ,0x56 ,0xcb ,0x8f ,0xe8 ,0xa2 ,0x5c ,0x62 ,0x68 ,0xd1 ,0x3d ,0x94 ,0x90 ,0x5b ,0xd7 ,0xce ,0x9a ,0x18 ,0xc4 ,0x30 ,0x56 ,0x6 ,0x3 ,0x55 ,0x1d ,0x1f ,0x4 ,0x4f ,0x30 ,0x4d ,0x30 ,0x4b ,0xa0 ,0x49 ,0xa0 ,0x47 ,0x86 ,0x45 ,0x68 ,0x74 ,0x74 ,0x70 ,0x3a ,0x2f ,0x2f ,0x63 ,0x72 ,0x6c ,0x2e ,0x6d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x2e ,0x63 ,0x6f ,0x6d ,0x2f ,0x70 ,0x6b ,0x69 ,0x2f ,0x63 ,0x72 ,0x6c ,0x2f ,0x70 ,0x72 ,0x6f ,0x64 ,0x75 ,0x63 ,0x74 ,0x73 ,0x2f ,0x4d ,0x69 ,0x63 ,0x52 ,0x6f ,0x6f ,0x43 ,0x65 ,0x72 ,0x41 ,0x75 ,0x74 ,0x5f ,0x32 ,0x30 ,0x31 ,0x30 ,0x2d ,0x30 ,0x36 ,0x2d ,0x32 ,0x33 ,0x2e ,0x63 ,0x72 ,0x6c ,0x30 ,0x5a ,0x6 ,0x8 ,0x2b ,0x6 ,0x1 ,0x5 ,0x5 ,0x7 ,0x1 ,0x1 ,0x4 ,0x4e ,0x30 ,0x4c ,0x30 ,0x4a ,0x6 ,0x8 ,0x2b ,0x6 ,0x1 ,0x5 ,0x5 ,0x7 ,0x30 ,0x2 ,0x86 ,0x3e ,0x68 ,0x74 ,0x74 ,0x70 ,0x3a ,0x2f ,0x2f ,0x77 ,0x77 ,0x77 ,0x2e ,0x6d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x2e ,0x63 ,0x6f ,0x6d ,0x2f ,0x70 ,0x6b ,0x69 ,0x2f ,0x63 ,0x65 ,0x72 ,0x74 ,0x73 ,0x2f ,0x4d ,0x69 ,0x63 ,0x52 ,0x6f ,0x6f ,0x43 ,0x65 ,0x72 ,0x41 ,0x75 ,0x74 ,0x5f ,0x32 ,0x30 ,0x31 ,0x30 ,0x2d ,0x30 ,0x36 ,0x2d ,0x32 ,0x33 ,0x2e ,0x63 ,0x72 ,0x74 ,0x30 ,0x81 ,0xa0 ,0x6 ,0x3 ,0x55 ,0x1d ,0x20 ,0x1 ,0x1 ,0xff ,0x4 ,0x81 ,0x95 ,0x30 ,0x81 ,0x92 ,0x30 ,0x81 ,0x8f ,0x6 ,0x9 ,0x2b ,0x6 ,0x1 ,0x4 ,0x1 ,0x82 ,0x37 ,0x2e ,0x3 ,0x30 ,0x81 ,0x81 ,0x30 ,0x3d ,0x6 ,0x8 ,0x2b ,0x6 ,0x1 ,0x5 ,0x5 ,0x7 ,0x2 ,0x1 ,0x16 ,0x31 ,0x68 ,0x74 ,0x74 ,0x70 ,0x3a ,0x2f ,0x2f ,0x77 ,0x77 ,0x77 ,0x2e ,0x6d ,0x69 ,0x63 ,0x72 ,0x6f ,0x73 ,0x6f ,0x66 ,0x74 ,0x2e ,0x63 ,0x6f ,0x6d ,0x2f ,0x50 ,0x4b ,0x49 ,0x2f ,0x64 ,0x6f ,0x63 ,0x73 ,0x2f ,0x43 ,0x50 ,0x53 ,0x2f ,0x64 ,0x65 ,0x66 ,0x61 ,0x75 ,0x6c ,0x74 ,0x2e ,0x68 ,0x74 ,0x6d ,0x30 ,0x40 ,0x6 ,0x8 ,0x2b ,0x6 ,0x1 ,0x5 ,0x5 ,0x7 ,0x2 ,0x2 ,0x30 ,0x34 ,0x1e ,0x32 ,0x20 ,0x1d ,0x0 ,0x4c ,0x0 ,0x65 ,0x0 ,0x67 ,0x0 ,0x61 ,0x0 ,0x6c ,0x0 ,0x5f ,0x0 ,0x50 ,0x0 ,0x6f ,0x0 ,0x6c ,0x0 ,0x69 ,0x0 ,0x63 ,0x0 ,0x79 ,0x0 ,0x5f ,0x0 ,0x53 ,0x0 ,0x74 ,0x0 ,0x61 ,0x0 ,0x74 ,0x0 ,0x65 ,0x0 ,0x6d ,0x0 ,0x65 ,0x0 ,0x6e ,0x0 ,0x74 ,0x0 ,0x2e ,0x20 ,0x1d ,0x30 ,0xd ,0x6 ,0x9 ,0x2a ,0x86 ,0x48 ,0x86 ,0xf7 ,0xd ,0x1 ,0x1 ,0xb ,0x5 ,0x0 ,0x3 ,0x82 ,0x2 ,0x1 ,0x0 ,0x7 ,0xe6 ,0x88 ,0x51 ,0xd ,0xe2 ,0xc6 ,0xe0 ,0x98 ,0x3f ,0x81 ,0x71 ,0x3 ,0x3d ,0x9d ,0xa3 ,0xa1 ,0x21 ,0x6f ,0xb3 ,0xeb ,0xa6 ,0xcc ,0xf5 ,0x31 ,0xbe ,0xcf ,0x5 ,0xe2 ,0xa9 ,0xfe ,0xfa ,0x57 ,0x6d ,0x19 ,0x30 ,0xb3 ,0xc2 ,0xc5 ,0x66 ,0xc9 ,0x6a ,0xdf ,0xf5 ,0xe7 ,0xf0 ,0x78 ,0xbd ,0xc7 ,0xa8 ,0x9e ,0x25 ,0xe3 ,0xf9 ,0xbc ,0xed ,0x6b ,0x54 ,0x57 ,0x8 ,0x2b ,0x51 ,0x82 ,0x44 ,0x12 ,0xfb ,0xb9 ,0x53 ,0x8c ,0xcc ,0xf4 ,0x60 ,0x12 ,0x8a ,0x76 ,0xcc ,0x40 ,0x40 ,0x41 ,0x9b ,0xdc ,0x5c ,0x17 ,0xff ,0x5c ,0xf9 ,0x5e ,0x17 ,0x35 ,0x98 ,0x24 ,0x56 ,0x4b ,0x74 ,0xef ,0x42 ,0x10 ,0xc8 ,0xaf ,0xbf ,0x7f ,0xc6 ,0x7f ,0xf2 ,0x37 ,0x7d ,0x5a ,0x3f ,0x1c ,0xf2 ,0x99 ,0x79 ,0x4a ,0x91 ,0x52 ,0x0 ,0xaf ,0x38 ,0xf ,0x17 ,0xf5 ,0x2f ,0x79 ,0x81 ,0x65 ,0xd9 ,0xa9 ,0xb5 ,0x6b ,0xe4 ,0xc7 ,0xce ,0xf6 ,0xca ,0x7a ,0x0 ,0x6f ,0x4b ,0x30 ,0x44 ,0x24 ,0x22 ,0x3c ,0xcf ,0xed ,0x3 ,0xa5 ,0x96 ,0x8f ,0x59 ,0x29 ,0xbc ,0xb6 ,0xfd ,0x4 ,0xe1 ,0x70 ,0x9f ,0x32 ,0x4a ,0x27 ,0xfd ,0x55 ,0xaf ,0x2f ,0xfe ,0xb6 ,0xe5 ,0x8e ,0x33 ,0xbb ,0x62 ,0x5f ,0x9a ,0xdb ,0x57 ,0x40 ,0xe9 ,0xf1 ,0xce ,0x99 ,0x66 ,0x90 ,0x8c ,0xff ,0x6a ,0x62 ,0x7f ,0xdd ,0xc5 ,0x4a ,0xb ,0x91 ,0x26 ,0xe2 ,0x39 ,0xec ,0x19 ,0x4a ,0x71 ,0x63 ,0x9d ,0x7b ,0x21 ,0x6d ,0xc3 ,0x9c ,0xa3 ,0xa2 ,0x3c ,0xfa ,0x7f ,0x7d ,0x96 ,0x6a ,0x90 ,0x78 ,0xa6 ,0x6d ,0xd2 ,0xe1 ,0x9c ,0xf9 ,0x1d ,0xfc ,0x38 ,0xd8 ,0x94 ,0xf4 ,0xc6 ,0xa5 ,0xa ,0x96 ,0x86 ,0xa4 ,0xbd ,0x9e ,0x1a ,0xae ,0x4 ,0x42 ,0x83 ,0xb8 ,0xb5 ,0x80 ,0x9b ,0x22 ,0x38 ,0x20 ,0xb5 ,0x25 ,0xe5 ,0x64 ,0xec ,0xf7 ,0xf4 ,0xbf ,0x7e ,0x63 ,0x59 ,0x25 ,0xf ,0x7a ,0x2e ,0x39 ,0x57 ,0x76 ,0xa2 ,0x71 ,0xaa ,0x6 ,0x8a ,0xf ,0x89 ,0x16 ,0xba ,0x61 ,0xa7 ,0x11 ,0xcb ,0x9a ,0xd8 ,0xe ,0x47 ,0x9a ,0x80 ,0xc5 ,0xd0 ,0xcd ,0xa7 ,0xd0 ,0xef ,0x7d ,0x83 ,0xf0 ,0xe1 ,0x3b ,0x71 ,0x9 ,0xdf ,0x5d ,0x74 ,0x98 ,0x22 ,0x8 ,0x61 ,0xda ,0xb0 ,0x50 ,0x1e ,0x6f ,0xbd ,0xf1 ,0xe1 ,0x0 ,0xdf ,0xe7 ,0x31 ,0x7 ,0xa4 ,0x93 ,0x3a ,0xf7 ,0x65 ,0x47 ,0x78 ,0xe8 ,0xf8 ,0xa8 ,0x48 ,0xab ,0xf7 ,0xde ,0x72 ,0x7e ,0x61 ,0x6b ,0x6f ,0x77 ,0xa9 ,0x81 ,0xcb ,0xa7 ,0x9 ,0xac ,0x39 ,0xbb ,0xec ,0xc6 ,0xcb ,0xd8 ,0x82 ,0xb4 ,0x72 ,0xcd ,0x1d ,0xf4 ,0xb8 ,0x85 ,0x1 ,0x1e ,0x80 ,0xfb ,0x1b ,0x89 ,0x2a ,0x54 ,0x39 ,0xb2 ,0x5b ,0xda ,0xc8 ,0xd ,0x55 ,0x99 ,0x7a ,0x87 ,0x73 ,0x3b ,0x8 ,0xe6 ,0x98 ,0x2d ,0xea ,0x8d ,0xe0 ,0x33 ,0x2e ,0x12 ,0x29 ,0xf5 ,0xc0 ,0x2f ,0x54 ,0x27 ,0x21 ,0xf7 ,0xc8 ,0xac ,0x4e ,0xda ,0x28 ,0xb8 ,0xb1 ,0xa9 ,0xdb ,0x96 ,0xb2 ,0xa7 ,0x42 ,0xa2 ,0xc9 ,0xcf ,0x19 ,0x41 ,0x4d ,0xe0 ,0x86 ,0xf9 ,0x2a ,0x9a ,0xa3 ,0x11 ,0x66 ,0x30 ,0xd3 ,0xbb ,0x74 ,0x32 ,0x4b ,0xdf ,0x63 ,0x7b ,0xf5 ,0x99 ,0x8a ,0x2f ,0x1b ,0xc7 ,0x21 ,0xaf ,0x59 ,0xb5 ,0xae ,0xdc ,0x44 ,0x3c ,0x97 ,0x50 ,0x71 ,0xd7 ,0xa1 ,0xd2 ,0xc5 ,0x55 ,0xe3 ,0x69 ,0xde ,0x57 ,0xc1 ,0xd1 ,0xde ,0x30 ,0xc0 ,0xfd ,0xcc ,0xe6 ,0x4d ,0xfb ,0xd ,0xbf ,0x5d ,0x4f ,0xe9 ,0x9d ,0x1e ,0x19 ,0x38 ,0x2f ,0xbc ,0xcf ,0x58 ,0x5 ,0x2e ,0xef ,0xd ,0xa0 ,0x50 ,0x35 ,0xda ,0xef ,0x9 ,0x27 ,0x1c ,0xd5 ,0xb3 ,0x7e ,0x35 ,0x1e ,0x8 ,0xba ,0xda ,0x36 ,0xdb ,0xd3 ,0x5f ,0x8f ,0xde ,0x74 ,0x88 ,0x49 ,0x12
+};
\ No newline at end of file
